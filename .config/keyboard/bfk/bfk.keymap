#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFAULT 0
#define NUMSYL  1
#define MOUSE   2
#define NAVI    3

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <175>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        // sf: shift_mods {
        //     compatible = "zmk,behavior-hold-tap";
        //     label = "SHIFT_MODS";
        //     #binding-cells = <2>;
        //     tapping-term-ms = <200>;
        //     quick-tap-ms = <0>;
        //     flavor = "hold-preferred";
        //     bindings = <&kp>, <&kp>;
        // };
    };

    combos {
//             0                1                   2                3             4            5            6            7                 8                9                10              11               12               13
//             14               15                  16               17            18           19           20           21                22               23               24              25               26               27
//             28               29                  30               31            32           33           34           35                36               37               38              39               40               41
//             42               43                  44               45            46           47           48           49                50               51               52              53               54               55
        compatible = "zmk,combos";
        // combo_esc {
        //     timeout-ms = <9>;
        //     key-positions = <37 38>;
        //     bindings = <&kp ESCAPE>;
        // };
// NUMBERS
        combo_n1 {
            timeout-ms = <60>;
            key-positions = <16 30>;
            bindings = <&kp N1>;
        };
        combo_n2 {
            timeout-ms = <60>;
            key-positions = <17 31>;
            bindings = <&kp N2>;
        };
        combo_n3 {
            timeout-ms = <60>;
            key-positions = <18 32>;
            bindings = <&kp N3>;
        };
        combo_n4 {
            timeout-ms = <60>;
            key-positions = <19 33>;
            bindings = <&kp N4>;
        };
        combo_n5 {
            timeout-ms = <60>;
            key-positions = <20 34>;
            bindings = <&kp N5>;
        };
        combo_n6 {
            timeout-ms = <60>;
            key-positions = <21 35>;
            bindings = <&kp N6>;
        };
        combo_n7 {
            timeout-ms = <60>;
            key-positions = <22 36>;
            bindings = <&kp N7>;
        };
        combo_n8 {
            timeout-ms = <60>;
            key-positions = <23 37>;
            bindings = <&kp N8>;
        };
        combo_n9 {
            timeout-ms = <60>;
            key-positions = <24 38>;
            bindings = <&kp N9>;
        };
        combo_n0 {
            timeout-ms = <60>;
            key-positions = <25 39>;
            bindings = <&kp N0>;
        };
// SYMBOLS
        combo_exclemation {
            timeout-ms = <60>;
            key-positions = <30 44>;
            bindings = <&kp EXCLAMATION>;
        };
        combo_at {
            timeout-ms = <60>;
            key-positions = <31 45>;
            bindings = <&kp AT>;
        };
        combo_hash {
            timeout-ms = <60>;
            key-positions = <32 46>;
            bindings = <&kp POUND>;
        };
        combo_dollar {
            timeout-ms = <60>;
            key-positions = <33 47>;
            bindings = <&kp DOLLAR>;
        };
        combo_percent {
            timeout-ms = <60>;
            key-positions = <34 48>;
            bindings = <&kp PERCENT>;
        };
        combo_caret {
            timeout-ms = <60>;
            key-positions = <35 49>;
            bindings = <&kp CARET>;
        };
        combo_ampersand {
            timeout-ms = <60>;
            key-positions = <36 50>;
            bindings = <&kp AMPERSAND>;
        };
        combo_star {
            timeout-ms = <60>;
            key-positions = <37 51>;
            bindings = <&kp STAR>;
        };
        combo_parenthasisopen {
            timeout-ms = <60>;
            key-positions = <38 52>;
            bindings = <&kp LPAR>;
        };
        combo_parenthasisclose {
            timeout-ms = <60>;
            key-positions = <39 53>;
            bindings = <&kp RPAR>;
        };

    };

//             1                2                   3                4             5            6            7           |8             9                10              11              12                 13               14
// thumb       top              mid-closer          bot-closer       body-left     body-right   mid-far      bot-far     |bot-far       mid-far          body-left       body-right      bot-closer         mid-closer       top
// &kp K_MUTE       &kp GRAVE           &kp EXCLAMATION  &kp AT        &kp HASH     &kp DOLLAR   &kp PERCENT  &kp CARET         &kp AMPERSAND    &kp LPAR         &kp RPAR        &kp STAR           &kp PIPE         &kp F10
    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
               &kp K_MUTE       &kp GRAVE           &kp N1           &kp N2        &kp N3       &kp N4       &kp N5       &kp N6            &kp N7           &kp N8           &kp N9          &kp N0           &kp F10          &kp F11
               &kp K_COPY       &kp ESCAPE          &kp Q            &kp W         &kp E        &kp R        &kp T        &kp Y             &kp U            &kp I            &kp O           &kp P            &kp LBKT         &kp RBKT
               &kp K_CUT        &kp BSPC            &hm LCTRL A      &hm LGUI S    &hm LALT D   &hm LSHFT F  &kp G        &kp H             &hm RSHFT J      &hm RALT K       &hm RGUI L      &hm RCTRL SEMI   &kp SQT          &kp PIPE
               &kp K_PASTE      &kp DELETE          &hm LCTRL Z      &hm LGUI X    &kp C        &kp V        &kp B        &kp N             &kp M            &kp COMMA        &kp DOT         &kp SLASH        &kp BSLH         &tog NUMSYL
               &kp F1           &mt LSHFT ENTER     &mt LALT TAB     &kp F21       &kp F22      &kp F2       &kp RALT     &kp F13           &kp F14          &kp MINUS        &kp EQUAL       &lt NUMSYL F23   &lt NAVI SPACE   &kp F9
            >;
			sensor-bindings = <&inc_dec_kp UP DOWN &inc_dec_kp F15 F16>;
        };

        numbers_symbols_managment_media_layer {
            bindings = <
               &trans           &out OUT_TOG        &trans           &trans        &trans       &trans       &trans       &trans             &trans           &kp SLASH       &kp STAR        &kp MINUS         &kp EQUAL       &kp K_VOL_UP
               &trans           &trans              &trans           &trans        &trans       &trans       &trans       &trans             &kp N7           &kp N8          &kp N9          &kp PLUS          &kp SLASH       &kp K_VOL_DN
               &trans           &trans              &kp N1           &kp N2        &kp N3       &kp N4       &trans       &trans             &kp N4           &kp N5          &kp N6          &kp ENTER         &kp MINUS       &kp K_MUTE
               &trans           &trans              &trans           &trans        &trans       &trans       &trans       &trans             &kp N1           &kp N2          &kp N3          &kp SLASH         &kp K_NEXT      &trans
               &bootloader      &trans              &trans           &trans        &trans       &reset       &bt BT_CLR   &mo MOUSE          &reset           &kp N0          &kp DOT         &kp C_STOP        &kp K_PP        &bootloader
            >;
			sensor-bindings = <&inc_dec_kp K_VOL_DN K_VOL_UP &inc_dec_kp C_REWIND C_FF>;
        };

        mouse_emulation {
            bindings = <
               &trans           &out OUT_TOG        &trans           &trans        &trans       &trans       &trans       &trans             &kp LS(KP_NUMLOCK) &kp KP_SLASH  &kp KP_ASTERISK  &kp KP_MINUS     &kp KP_EQUAL     &kp K_VOL_UP
               &trans           &trans              &trans           &trans        &trans       &trans       &trans       &trans             &kp KP_N7        &kp KP_N8       &kp KP_N9        &kp KP_PLUS      &kp SLASH        &kp K_VOL_DN
               &trans           &trans              &kp N1           &kp N2        &kp N3       &kp N4       &trans       &trans             &kp KP_N4        &kp KP_N5       &kp KP_N6        &kp KP_ENTER     &kp MINUS        &kp K_MUTE
               &trans           &trans              &trans           &trans        &trans       &trans       &trans       &trans             &kp KP_N1        &kp KP_N2       &kp KP_N3        &kp KP_SLASH     &kp K_NEXT       &trans
               &bootloader      &trans              &trans           &trans        &trans       &reset       &bt BT_CLR   &kp LS(KP_NUMLOCK) &reset           &kp KP_N0       &kp KP_DOT       &kp C_STOP       &kp K_PP         &bootloader
            >;
			sensor-bindings = <&inc_dec_kp K_VOL_DN K_VOL_UP &inc_dec_kp C_REWIND C_FF>;
        };

        navigation_layer {
            bindings = <
                &trans          &trans              &kp LA(F15)      &kp LA(F16)   &kp LA(F17)   &kp LA(F18) &trans       &kp LG(F20)        &kp F20          &kp F16         &kp F17          &kp F18           &trans          &trans
                &trans          &trans              &kp LA(F19)      &kp LA(F20)   &kp LA(F21)   &kp LA(F22) &trans       &kp LG(F21)        &kp F5           &kp F6          &kp F7           &kp F8            &trans          &trans
                &trans          &kp LC(BSPC)        &kp HOME         &kp LC(LEFT)  &kp LC(RIGHT) &kp END     &trans       &kp F20            &kp LEFT         &kp DOWN        &kp UP           &kp RIGHT         &trans          &trans
                &trans          &kp LC(DELETE)      &kp LC(F15)      &kp LC(F16)   &kp LC(F17)   &kp LC(F18) &trans       &kp F21            &kp LG(F5)       &kp LG(F6)      &kp LG(F7)       &kp LG(F8)        &trans          &trans
                &trans          &mt LSHFT ENTER     &mt LALT TAB     &kp LC(F20)   &kp LC(F21)   &kp LC(F22) &trans       &trans             &kp LG(F15)      &kp LG(F16)     &kp LG(F17)      &kp LG(F18)       &trans          &trans
            >;
			sensor-bindings = <&inc_dec_kp F17 F18 &inc_dec_kp F19 F20>;
        };
    };
};
